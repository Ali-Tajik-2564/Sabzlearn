{"ast":null,"code":"import _slicedToArray from\"J:/ali/Sabzlearn/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useState}from\"react\";import\"./App.css\";import{useRoutes}from\"react-router-dom\";import routes from\"./router\";import\"./style/reset.css\";import\"./style/fonts.css\";import\"./style/helpers.css\";import\"./style/variables.css\";import\"./style/defaults.css\";import AuthContext from\"./Context/AuthContext\";import{jsx as _jsx}from\"react/jsx-runtime\";function App(){var router=useRoutes(routes);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),token=_useState2[0],setToken=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),userInfo=_useState4[0],setUserInfo=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),isLoggedIn=_useState6[0],setIsLoggedIn=_useState6[1];var login=function login(userInfo,token){setToken(token);setUserInfo(userInfo);setIsLoggedIn(true);localStorage.setItem(\"user\",JSON.stringify(token));};var logout=useCallback(function(){setToken(null);setUserInfo(null);localStorage.removeItem(\"user\");},[]);useEffect(function(){var localStorageData=JSON.parse(localStorage.getItem(\"user\"));console.log(\"localStorageDate\",localStorageData);if(localStorageData){fetch(\"http://localhost:4000/v1/auth/me\",{headers:{Authorization:\"Bearer \".concat(localStorageData)}}).then(function(res){return res.json();}).then(function(userData){setIsLoggedIn(true);setUserInfo(userData);console.log(isLoggedIn);});}else{setIsLoggedIn(false);}},[login,logout]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{token:token,userInfo:userInfo,login:login,logout:logout,isLoggedIn:isLoggedIn},children:router});}export default App;","map":{"version":3,"names":["React","useCallback","useEffect","useState","useRoutes","routes","AuthContext","jsx","_jsx","App","router","_useState","_useState2","_slicedToArray","token","setToken","_useState3","_useState4","userInfo","setUserInfo","_useState5","_useState6","isLoggedIn","setIsLoggedIn","login","localStorage","setItem","JSON","stringify","logout","removeItem","localStorageData","parse","getItem","console","log","fetch","headers","Authorization","concat","then","res","json","userData","Provider","value","children"],"sources":["J:/ali/Sabzlearn/frontend/src/App.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { useRoutes } from \"react-router-dom\";\nimport routes from \"./router\";\nimport \"./style/reset.css\";\nimport \"./style/fonts.css\";\nimport \"./style/helpers.css\";\nimport \"./style/variables.css\";\nimport \"./style/defaults.css\";\nimport AuthContext from \"./Context/AuthContext\";\nfunction App() {\n  const router = useRoutes(routes);\n  const [token, setToken] = useState(null);\n  const [userInfo, setUserInfo] = useState(null);\n  const [isLoggedIn, setIsLoggedIn] = useState(null);\n\n  const login = (userInfo, token) => {\n    setToken(token);\n    setUserInfo(userInfo);\n    setIsLoggedIn(true);\n    localStorage.setItem(\"user\", JSON.stringify(token));\n  }\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserInfo(null);\n    localStorage.removeItem(\"user\");\n  }, []);\n  useEffect(() => {\n    const localStorageData = JSON.parse(localStorage.getItem(\"user\"));\n    console.log(\"localStorageDate\", localStorageData);\n    if (localStorageData) {\n      fetch(\"http://localhost:4000/v1/auth/me\", {\n        headers: {\n          Authorization: `Bearer ${localStorageData}`,\n        }\n      })\n        .then((res) => res.json())\n        .then((userData) => {\n          setIsLoggedIn(true);\n          setUserInfo(userData);\n          console.log(isLoggedIn);\n        });\n    } else {\n      setIsLoggedIn(false)\n    }\n  }, [login, logout]);\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        userInfo,\n        login,\n        logout,\n        isLoggedIn,\n      }}>\n      {router}\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n"],"mappings":"+GAAA,MAAO,CAAAA,KAAK,EAAIC,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC/D,MAAO,WAAW,CAClB,OAASC,SAAS,KAAQ,kBAAkB,CAC5C,MAAO,CAAAC,MAAM,KAAM,UAAU,CAC7B,MAAO,mBAAmB,CAC1B,MAAO,mBAAmB,CAC1B,MAAO,qBAAqB,CAC5B,MAAO,uBAAuB,CAC9B,MAAO,sBAAsB,CAC7B,MAAO,CAAAC,WAAW,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAChD,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACb,GAAM,CAAAC,MAAM,CAAGN,SAAS,CAACC,MAAM,CAAC,CAChC,IAAAM,SAAA,CAA0BR,QAAQ,CAAC,IAAI,CAAC,CAAAS,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,KAAK,CAAAF,UAAA,IAAEG,QAAQ,CAAAH,UAAA,IACtB,IAAAI,UAAA,CAAgCb,QAAQ,CAAC,IAAI,CAAC,CAAAc,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAvCE,QAAQ,CAAAD,UAAA,IAAEE,WAAW,CAAAF,UAAA,IAC5B,IAAAG,UAAA,CAAoCjB,QAAQ,CAAC,IAAI,CAAC,CAAAkB,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAA3CE,UAAU,CAAAD,UAAA,IAAEE,aAAa,CAAAF,UAAA,IAEhC,GAAM,CAAAG,KAAK,CAAG,QAAR,CAAAA,KAAKA,CAAIN,QAAQ,CAAEJ,KAAK,CAAK,CACjCC,QAAQ,CAACD,KAAK,CAAC,CACfK,WAAW,CAACD,QAAQ,CAAC,CACrBK,aAAa,CAAC,IAAI,CAAC,CACnBE,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEC,IAAI,CAACC,SAAS,CAACd,KAAK,CAAC,CAAC,CACrD,CAAC,CACD,GAAM,CAAAe,MAAM,CAAG5B,WAAW,CAAC,UAAM,CAC/Bc,QAAQ,CAAC,IAAI,CAAC,CACdI,WAAW,CAAC,IAAI,CAAC,CACjBM,YAAY,CAACK,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAAE,EAAE,CAAC,CACN5B,SAAS,CAAC,UAAM,CACd,GAAM,CAAA6B,gBAAgB,CAAGJ,IAAI,CAACK,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CAAC,CACjEC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAEJ,gBAAgB,CAAC,CACjD,GAAIA,gBAAgB,CAAE,CACpBK,KAAK,CAAC,kCAAkC,CAAE,CACxCC,OAAO,CAAE,CACPC,aAAa,WAAAC,MAAA,CAAYR,gBAAgB,CAC3C,CACF,CAAC,CAAC,CACCS,IAAI,CAAC,SAACC,GAAG,QAAK,CAAAA,GAAG,CAACC,IAAI,CAAC,CAAC,GAAC,CACzBF,IAAI,CAAC,SAACG,QAAQ,CAAK,CAClBpB,aAAa,CAAC,IAAI,CAAC,CACnBJ,WAAW,CAACwB,QAAQ,CAAC,CACrBT,OAAO,CAACC,GAAG,CAACb,UAAU,CAAC,CACzB,CAAC,CAAC,CACN,CAAC,IAAM,CACLC,aAAa,CAAC,KAAK,CAAC,CACtB,CACF,CAAC,CAAE,CAACC,KAAK,CAAEK,MAAM,CAAC,CAAC,CACnB,mBACErB,IAAA,CAACF,WAAW,CAACsC,QAAQ,EACnBC,KAAK,CAAE,CACL/B,KAAK,CAALA,KAAK,CACLI,QAAQ,CAARA,QAAQ,CACRM,KAAK,CAALA,KAAK,CACLK,MAAM,CAANA,MAAM,CACNP,UAAU,CAAVA,UACF,CAAE,CAAAwB,QAAA,CACDpC,MAAM,CACa,CAAC,CAE3B,CAEA,cAAe,CAAAD,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}