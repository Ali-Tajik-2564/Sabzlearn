{
  "name": "CKEditor5.dll",
  "content": {
    "./clipboard.js": {
      "id": "./src/clipboard.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "Clipboard",
        "ClipboardPipeline",
        "DragDrop",
        "DragDropBlockToolbar",
        "DragDropExperimental",
        "DragDropTarget",
        "PastePlainText"
      ]
    },
    "./core.js": {
      "id": "./src/core.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "Command",
        "Context",
        "ContextPlugin",
        "DataApiMixin",
        "Editor",
        "ElementApiMixin",
        "MultiCommand",
        "PendingActions",
        "Plugin",
        "attachToForm",
        "icons",
        "secureSourceElement"
      ]
    },
    "./engine.js": {
      "id": "./src/engine.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "AttributeElement",
        "AttributeOperation",
        "BubblingEventInfo",
        "ClickObserver",
        "Conversion",
        "DataController",
        "DataTransfer",
        "DocumentFragment",
        "DocumentSelection",
        "DomConverter",
        "DomEventData",
        "DomEventObserver",
        "DowncastWriter",
        "EditingController",
        "Element",
        "FocusObserver",
        "History",
        "HtmlDataProcessor",
        "InsertOperation",
        "LivePosition",
        "LiveRange",
        "MarkerOperation",
        "Matcher",
        "MergeOperation",
        "Model",
        "MouseObserver",
        "MoveOperation",
        "NoOperation",
        "Observer",
        "OperationFactory",
        "Position",
        "Range",
        "RenameOperation",
        "Renderer",
        "RootAttributeOperation",
        "RootOperation",
        "SplitOperation",
        "StylesProcessor",
        "TabObserver",
        "Text",
        "TextProxy",
        "TreeWalker",
        "UpcastWriter",
        "View",
        "ViewAttributeElement",
        "ViewContainerElement",
        "ViewDocument",
        "ViewDocumentFragment",
        "ViewEditableElement",
        "ViewElement",
        "ViewEmptyElement",
        "ViewRawElement",
        "ViewRootEditableElement",
        "ViewText",
        "ViewTreeWalker",
        "ViewUIElement",
        "addBackgroundRules",
        "addBorderRules",
        "addMarginRules",
        "addPaddingRules",
        "disablePlaceholder",
        "enablePlaceholder",
        "findOptimalInsertionRange",
        "getBoxSidesShorthandValue",
        "getBoxSidesValueReducer",
        "getBoxSidesValues",
        "getFillerOffset",
        "getPositionShorthandNormalizer",
        "getShorthandValues",
        "hidePlaceholder",
        "isAttachment",
        "isColor",
        "isLength",
        "isLineStyle",
        "isPercentage",
        "isPosition",
        "isRepeat",
        "isURL",
        "needsPlaceholder",
        "showPlaceholder",
        "transformSets"
      ]
    },
    "./enter.js": {
      "id": "./src/enter.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "Enter",
        "ShiftEnter"
      ]
    },
    "./paragraph.js": {
      "id": "./src/paragraph.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "Paragraph",
        "ParagraphButtonUI"
      ]
    },
    "./select-all.js": {
      "id": "./src/select-all.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "SelectAll",
        "SelectAllEditing",
        "SelectAllUI"
      ]
    },
    "./typing.js": {
      "id": "./src/typing.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "Delete",
        "Input",
        "InsertTextCommand",
        "TextTransformation",
        "TextWatcher",
        "TwoStepCaretMovement",
        "Typing",
        "findAttributeRange",
        "findAttributeRangeBound",
        "getLastTextLine",
        "inlineHighlight"
      ]
    },
    "./ui.js": {
      "id": "./src/ui.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "BalloonPanelView",
        "BalloonToolbar",
        "BlockToolbar",
        "BodyCollection",
        "BoxedEditorUIView",
        "ButtonView",
        "ColorGridView",
        "ColorPickerView",
        "ColorSelectorView",
        "ColorTileView",
        "ComponentFactory",
        "ContextualBalloon",
        "CssTransitionDisablerMixin",
        "DropdownButtonView",
        "DropdownPanelView",
        "DropdownView",
        "EditorUI",
        "EditorUIView",
        "FocusCycler",
        "FormHeaderView",
        "IconView",
        "IframeView",
        "InlineEditableUIView",
        "InputNumberView",
        "InputTextView",
        "InputView",
        "LabelView",
        "LabeledFieldView",
        "ListItemView",
        "ListView",
        "Model",
        "Notification",
        "SplitButtonView",
        "StickyPanelView",
        "SwitchButtonView",
        "Template",
        "ToolbarLineBreakView",
        "ToolbarSeparatorView",
        "ToolbarView",
        "TooltipManager",
        "View",
        "ViewCollection",
        "addKeyboardHandlingForGrid",
        "addListToDropdown",
        "addToolbarToDropdown",
        "clickOutsideHandler",
        "createDropdown",
        "createLabeledDropdown",
        "createLabeledInputNumber",
        "createLabeledInputText",
        "focusChildOnDropdownOpen",
        "getLocalizedColorOptions",
        "icons",
        "injectCssTransitionDisabler",
        "normalizeColorOptions",
        "normalizeSingleColorDefinition",
        "normalizeToolbarConfig",
        "submitHandler"
      ]
    },
    "./undo.js": {
      "id": "./src/undo.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "Undo",
        "UndoEditing",
        "UndoUI"
      ]
    },
    "./upload.js": {
      "id": "./src/upload.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "Base64UploadAdapter",
        "FileDialogButtonView",
        "FileRepository",
        "SimpleUploadAdapter"
      ]
    },
    "./utils.js": {
      "id": "./src/utils.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "CKEditorError",
        "Collection",
        "Config",
        "DomEmitterMixin",
        "ElementReplacer",
        "EmitterMixin",
        "EventInfo",
        "FocusTracker",
        "KeystrokeHandler",
        "Locale",
        "ObservableMixin",
        "Rect",
        "ResizeObserver",
        "compareArrays",
        "count",
        "createElement",
        "delay",
        "diff",
        "diffToChanges",
        "env",
        "fastDiff",
        "findClosestScrollableAncestor",
        "first",
        "getAncestors",
        "getCode",
        "getDataFromElement",
        "getElementsIntersectionRect",
        "getEnvKeystrokeText",
        "getLanguageDirection",
        "getLocalizedArrowKeyCodeDirection",
        "getOptimalPosition",
        "getScrollableAncestors",
        "global",
        "indexOf",
        "insertAt",
        "insertToPriorityArray",
        "isArrowKeyCode",
        "isCombiningMark",
        "isComment",
        "isForwardArrowKeyCode",
        "isHighSurrogateHalf",
        "isInsideCombinedSymbol",
        "isInsideEmojiSequence",
        "isInsideSurrogatePair",
        "isIterable",
        "isLowSurrogateHalf",
        "isNode",
        "isRange",
        "isText",
        "isValidAttributeName",
        "isVisible",
        "keyCodes",
        "logError",
        "logWarning",
        "mix",
        "parseKeystroke",
        "priorities",
        "releaseDate",
        "remove",
        "scrollAncestorsToShowTarget",
        "scrollViewportToShowTarget",
        "setDataInElement",
        "spliceArray",
        "toArray",
        "toMap",
        "toUnit",
        "uid",
        "verifyLicense",
        "version"
      ]
    },
    "./watchdog.js": {
      "id": "./src/watchdog.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "ContextWatchdog",
        "EditorWatchdog",
        "Watchdog"
      ]
    },
    "./widget.js": {
      "id": "./src/widget.js",
      "buildMeta": {
        "exportsType": "namespace",
        "sideEffectFree": true
      },
      "exports": [
        "WIDGET_CLASS_NAME",
        "WIDGET_SELECTED_CLASS_NAME",
        "Widget",
        "WidgetResize",
        "WidgetToolbarRepository",
        "WidgetTypeAround",
        "findOptimalInsertionRange",
        "getLabel",
        "isWidget",
        "setHighlightHandling",
        "setLabel",
        "toWidget",
        "toWidgetEditable",
        "viewToModelPositionOutsideModelElement"
      ]
    }
  }
}